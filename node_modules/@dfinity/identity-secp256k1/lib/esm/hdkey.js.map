{"version":3,"file":"hdkey.js","sourceRoot":"","sources":["../../src/hdkey.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/ban-ts-comment */\n// Package adapted from https://www.npmjs.com/package/hdkey\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-this-alias */\nimport assert from 'assert';\nimport { Buffer } from 'buffer';\nimport bs58check from 'bs58check';\nimport secp256k1 from 'secp256k1';\nimport { createHmac, createHash, randomBytes } from 'crypto';\n\nconst MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8');\nconst HARDENED_OFFSET = 0x80000000;\nconst LEN = 78;\n\n// Bitcoin hardcoded by default, can use package `coininfo` for others\nconst BITCOIN_VERSIONS = { private: 0x0488ade4, public: 0x0488b21e };\n\n/**\n *\n * @param versions any\n */\nfunction HDKey(versions?: any) {\n  // @ts-ignore\n  this.versions = versions || BITCOIN_VERSIONS;\n  // @ts-ignore\n  this.depth = 0;\n  // @ts-ignore\n  this.index = 0;\n  // @ts-ignore\n  this._privateKey = null;\n  // @ts-ignore\n  this._publicKey = null;\n  // @ts-ignore\n  this.chainCode = null;\n  // @ts-ignore\n  this._fingerprint = 0;\n  // @ts-ignore\n  this.parentFingerprint = 0;\n}\n\nObject.defineProperty(HDKey.prototype, 'fingerprint', {\n  get: function () {\n    return this._fingerprint;\n  },\n});\nObject.defineProperty(HDKey.prototype, 'identifier', {\n  get: function () {\n    return this._identifier;\n  },\n});\nObject.defineProperty(HDKey.prototype, 'pubKeyHash', {\n  get: function () {\n    return this.identifier;\n  },\n});\n\nObject.defineProperty(HDKey.prototype, 'privateKey', {\n  get: function () {\n    return this._privateKey;\n  },\n  set: function (value) {\n    assert.equal(value.length, 32, 'Private key must be 32 bytes.');\n    assert(secp256k1.privateKeyVerify(value) === true, 'Invalid private key');\n\n    this._privateKey = value;\n    this._publicKey = Buffer.from(secp256k1.publicKeyCreate(value, true));\n    this._identifier = hash160(this.publicKey);\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0);\n  },\n});\n\nObject.defineProperty(HDKey.prototype, 'publicKey', {\n  get: function () {\n    return this._publicKey;\n  },\n  set: function (value) {\n    assert(value.length === 33 || value.length === 65, 'Public key must be 33 or 65 bytes.');\n    assert(secp256k1.publicKeyVerify(value) === true, 'Invalid public key');\n\n    this._publicKey = Buffer.from(secp256k1.publicKeyConvert(value, true)); // force compressed point\n    this._identifier = hash160(this.publicKey);\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0);\n    this._privateKey = null;\n  },\n});\n\nObject.defineProperty(HDKey.prototype, 'privateExtendedKey', {\n  get: function () {\n    if (this._privateKey)\n      return bs58check.encode(\n        serialize(\n          this,\n          this.versions.private,\n          Buffer.concat([Buffer.alloc(1, 0), this.privateKey]),\n        ),\n      );\n    else return null;\n  },\n});\n\nObject.defineProperty(HDKey.prototype, 'publicExtendedKey', {\n  get: function () {\n    return bs58check.encode(serialize(this, this.versions.public, this.publicKey));\n  },\n});\n\nHDKey.prototype.derive = function (path: string) {\n  if (path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return this;\n  }\n\n  const entries = path.split('/');\n  let hdkey = this;\n  entries.forEach(function (c, i) {\n    if (i === 0) {\n      assert(/^[mM]{1}/.test(c), 'Path must start with \"m\" or \"M\"');\n      return;\n    }\n\n    const hardened = c.length > 1 && c[c.length - 1] === \"'\";\n    let childIndex = parseInt(c, 10); // & (HARDENED_OFFSET - 1)\n    assert(childIndex < HARDENED_OFFSET, 'Invalid index');\n    if (hardened) childIndex += HARDENED_OFFSET;\n\n    hdkey = hdkey.deriveChild(childIndex);\n  });\n\n  return hdkey;\n};\n\nHDKey.prototype.deriveChild = function (index: number) {\n  const isHardened = index >= HARDENED_OFFSET;\n  const indexBuffer = Buffer.allocUnsafe(4);\n  indexBuffer.writeUInt32BE(index, 0);\n\n  let data;\n\n  if (isHardened) {\n    // Hardened child\n    assert(this.privateKey, 'Could not derive hardened child key');\n\n    let pk = this.privateKey;\n    const zb = Buffer.alloc(1, 0);\n    pk = Buffer.concat([zb, pk]);\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data = Buffer.concat([pk, indexBuffer]);\n  } else {\n    // Normal child\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    data = Buffer.concat([this.publicKey, indexBuffer]);\n  }\n\n  const I = createHmac('sha512', this.chainCode).update(data).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n\n  const hd = new (HDKey as any)(this.versions);\n\n  // Private parent key -> private child key\n  if (this.privateKey) {\n    // ki = parse256(IL) + kpar (mod n)\n    try {\n      hd.privateKey = Buffer.from(secp256k1.privateKeyTweakAdd(Buffer.from(this.privateKey), IL));\n      // throw if IL >= n || (privateKey + IL) === 0\n    } catch (err) {\n      // In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i\n      return this.deriveChild(index + 1);\n    }\n    // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    try {\n      hd.publicKey = Buffer.from(\n        secp256k1.publicKeyTweakAdd(Buffer.from(this.publicKey), IL, true),\n      );\n      // throw if IL >= n || (g**IL + publicKey) is infinity\n    } catch (err) {\n      // In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i\n      return this.deriveChild(index + 1);\n    }\n  }\n\n  hd.chainCode = IR;\n  hd.depth = this.depth + 1;\n  hd.parentFingerprint = this.fingerprint; // .readUInt32BE(0)\n  hd.index = index;\n\n  return hd;\n};\n\nHDKey.prototype.sign = function (hash: Buffer) {\n  return Buffer.from(secp256k1.ecdsaSign(hash, this.privateKey).signature);\n};\n\nHDKey.prototype.verify = function (hash: Buffer, signature: Buffer) {\n  return secp256k1.ecdsaVerify(\n    Uint8Array.from(signature),\n    Uint8Array.from(hash),\n    Uint8Array.from(this.publicKey),\n  );\n};\n\nHDKey.prototype.wipePrivateData = function () {\n  if (this._privateKey) randomBytes(this._privateKey.length).copy(this._privateKey);\n  this._privateKey = null;\n  return this;\n};\n\nHDKey.prototype.toJSON = function () {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey,\n  };\n};\n\nHDKey.fromMasterSeed = function (seedBuffer: Buffer, versions?: any) {\n  const I = createHmac('sha512', MASTER_SECRET).update(seedBuffer).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n\n  const hdkey = new (HDKey as any)(versions);\n  hdkey.chainCode = IR;\n  hdkey.privateKey = IL;\n\n  return hdkey;\n};\n\nHDKey.fromExtendedKey = function (base58key: string, versions?: any) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  versions = versions || BITCOIN_VERSIONS;\n  const hdkey = new (HDKey as any)(versions);\n\n  const keyBuffer = bs58check.decode(base58key);\n\n  const version = keyBuffer.readUInt32BE(0);\n  assert(\n    version === versions.private || version === versions.public,\n    'Version mismatch: does not match private or public',\n  );\n\n  hdkey.depth = keyBuffer.readUInt8(4);\n  hdkey.parentFingerprint = keyBuffer.readUInt32BE(5);\n  hdkey.index = keyBuffer.readUInt32BE(9);\n  hdkey.chainCode = keyBuffer.slice(13, 45);\n\n  const key = keyBuffer.slice(45);\n  if (key.readUInt8(0) === 0) {\n    // private\n    assert(version === versions.private, 'Version mismatch: version does not match private');\n    hdkey.privateKey = key.slice(1); // cut off first 0x0 byte\n  } else {\n    assert(version === versions.public, 'Version mismatch: version does not match public');\n    hdkey.publicKey = key;\n  }\n\n  return hdkey;\n};\n\nHDKey.fromJSON = function (obj: any) {\n  return HDKey.fromExtendedKey(obj.xpriv);\n};\n\nfunction serialize(hdkey: any, version: any, key: any) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  const buffer = Buffer.allocUnsafe(LEN);\n\n  buffer.writeUInt32BE(version, 0);\n  buffer.writeUInt8(hdkey.depth, 4);\n\n  const fingerprint = hdkey.depth ? hdkey.parentFingerprint : 0x00000000;\n  buffer.writeUInt32BE(fingerprint, 5);\n  buffer.writeUInt32BE(hdkey.index, 9);\n\n  hdkey.chainCode.copy(buffer, 13);\n  key.copy(buffer, 45);\n\n  return buffer;\n}\n\nfunction hash160(buf: Buffer) {\n  const sha = createHash('sha256').update(buf).digest();\n  return createHash('ripemd160').update(sha).digest();\n}\n\nHDKey.HARDENED_OFFSET = HARDENED_OFFSET;\nexport default HDKey;\n"]}